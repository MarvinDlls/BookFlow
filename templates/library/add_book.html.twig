{% extends 'base.html.twig' %}

{% block title %}Ajouter un livre à l'étagère{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h1 class="h4 mb-0">Ajouter un livre à l'étagère "{{ shelfName }}"</h1>
                    </div>
                    <div class="card-body">
                        <form id="addBookForm" action="{{ path('add_book_to_shelf', {'userId': userId, 'shelfName': shelfName}) }}" method="post">
                            <div class="mb-3">
                                <label for="volumeId" class="form-label">ID du volume</label>
                                <input type="text" class="form-control" id="volumeId" name="volumeId" required>
                                <div class="form-text">
                                    Entrez l'ID du volume Google Books à ajouter
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label for="bookSearch" class="form-label">Ou recherchez un livre</label>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="bookSearch">
                                    <button class="btn btn-outline-secondary" type="button" id="searchButton">
                                        <i class="fas fa-search"></i> Rechercher
                                    </button>
                                </div>
                            </div>
                            
                            <div id="searchResults" class="mb-3 d-none">
                                <h5>Résultats de recherche</h5>
                                <div class="list-group" id="resultsList"></div>
                            </div>
                            
                            <div class="d-flex justify-content-between">
                                <button type="submit" class="btn btn-primary">Ajouter à l'étagère</button>
                                <a href="{{ path('get_books_from_shelf', {'userId': userId, 'shelfName': shelfName}) }}" class="btn btn-outline-secondary">
                                    Retour à l'étagère
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
                
                <div id="responseMessage" class="alert mt-3 d-none"></div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('addBookForm');
            const searchButton = document.getElementById('searchButton');
            const bookSearch = document.getElementById('bookSearch');
            const resultsList = document.getElementById('resultsList');
            const searchResults = document.getElementById('searchResults');
            const responseMessage = document.getElementById('responseMessage');
            
            // Recherche de livres
            searchButton.addEventListener('click', function() {
                const query = bookSearch.value.trim();
                if (!query) return;
                
                // Simulation d'une recherche avec l'API Google Books
                fetch(`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(query)}&maxResults=5`)
                    .then(response => response.json())
                    .then(data => {
                        resultsList.innerHTML = '';
                        searchResults.classList.remove('d-none');
                        
                        if (data.items && data.items.length > 0) {
                            data.items.forEach(book => {
                                const volumeInfo = book.volumeInfo;
                                const li = document.createElement('a');
                                li.href = '#';
                                li.className = 'list-group-item list-group-item-action';
                                li.innerHTML = `
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">${volumeInfo.title}</h5>
                                    </div>
                                    <p class="mb-1">${volumeInfo.authors ? volumeInfo.authors.join(', ') : 'Auteur inconnu'}</p>
                                    <small class="text-muted">ID: ${book.id}</small>
                                `;
                                li.addEventListener('click', function(e) {
                                    e.preventDefault();
                                    document.getElementById('volumeId').value = book.id;
                                });
                                resultsList.appendChild(li);
                            });
                        } else {
                            resultsList.innerHTML = '<div class="list-group-item">Aucun résultat trouvé</div>';
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        resultsList.innerHTML = '<div class="list-group-item text-danger">Erreur lors de la recherche</div>';
                    });
            });
            
            // Soumission du formulaire avec AJAX
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                
                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    responseMessage.classList.remove('d-none', 'alert-success', 'alert-danger');
                    
                    if (data.success) {
                        responseMessage.classList.add('alert-success');
                        responseMessage.textContent = 'Le livre a été ajouté avec succès!';
                        form.reset();
                        searchResults.classList.add('d-none');
                    } else {
                        responseMessage.classList.add('alert-danger');
                        responseMessage.textContent = 'Erreur: ' + (data.error || 'Une erreur est survenue');
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    responseMessage.classList.remove('d-none');
                    responseMessage.classList.add('alert-danger');
                    responseMessage.textContent = 'Une erreur est survenue lors de l\'ajout du livre';
                });
            });
        });
    </script>
{% endblock %}